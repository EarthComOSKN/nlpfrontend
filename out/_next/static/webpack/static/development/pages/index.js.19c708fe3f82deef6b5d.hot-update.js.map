{"version":3,"file":"static/webpack/static/development/pages/index.js.19c708fe3f82deef6b5d.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport css from \"@emotion/css\";\nimport styled from \"styled-components\";\nimport { Input, Card, Col, Row, Skeleton, Avatar } from \"antd\";\nimport axios from \"axios\";\n\nimport \"antd/dist/antd.css\";\n\nimport \"./style.css\";\n\nconst { Search } = Input;\n\nconst { Meta } = Card;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #0e0e0e;\n  color: #ffffff;\n  padding-bottom: 4rem;\n`;\n\nconst Title = styled.div`\n  margin: 4rem 0;\n  font-size: 3rem;\n`;\n\nconst CardContainer = styled(Row)`\n  margin-top: 4rem !important;\n  max-width: 1440px;\n`;\n\nconst MovieCard = styled(Card)`\n  width: 260px;\n  height: 440px;\n`;\n\nconst MovieImage = styled.div`\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-image: ${({ url }) => `url('${url}')`};\n  height: 100%;\n`;\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const skeletonList = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\n\n  useEffect(() => {\n    axios.get(`http://localhost:8080/movie`).then(({ data: { movies } }) => {\n      setMovies(movies);\n      setLoading(false);\n    });\n  }, []);\n\n  const handleSearch = async (search) => {\n    setLoading(true);\n    axios.get(`http://localhost:8080/movie/text?query=${search}`).then(({ data: { movies } }) => {\n      setMovies(movies);\n      setLoading(false);\n    });\n  };\n\n  return (\n    <Container>\n      <div id=\"particles-js\"></div>\n      <script src=\"particles.js\"></script>\n      <Title>หนังชนะ</Title>\n      <Search\n        placeholder=\"กรุณากรอกคำถาม...\"\n        enterButton\n        style={{ width: 600 }}\n        onSearch={handleSearch}\n      />\n      <CardContainer gutter={[4, 24]}>\n        {!loading\n          ? movies.map((movie, i) => (\n              <Col\n                key={i}\n                span={8}\n                css={css`\n                  display: flex;\n                  justify-content: center;\n                `}\n              >\n                <MovieCard title={movie.name} bordered={false}>\n                  {movie.imageUrl ? (\n                    <MovieImage url={movie.imageUrl} />\n                  ) : (\n                    <div\n                      css={css`\n                        display: flex;\n                        justify-content: center;\n                      `}\n                    >\n                      Picture\n                    </div>\n                  )}\n                </MovieCard>\n              </Col>\n            ))\n          : skeletonList.map((item, i) => (\n              <Col\n                key={i}\n                span={8}\n                css={css`\n                  display: flex;\n                  justify-content: center;\n                `}\n              >\n                <MovieCard bordered={false}>\n                  <Skeleton\n                    loading={loading}\n                    active\n                    css={css`\n                      padding: 4rem;\n                    `}\n                  >\n                    <Meta title=\"Card title\" description=\"This is the description\" />\n                  </Skeleton>\n                </MovieCard>\n              </Col>\n            ))}\n      </CardContainer>\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AAEA;;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAyBA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBA;AAyBA;AACA;AACA;;;;A","sourceRoot":""}